name: Build Custom AMI
on:
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    name: Build Custom AMI
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
    steps:
    
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm i
      - run: npm test

      - name: Compress codebase
        run:  touch webapp.tar.gz && tar --exclude=webapp.tar.gz --exclude='.git' --exclude='.github' --exclude='.vscode' --exclude='node_modules' --exclude="package-lock.json" --exclude=".env" -zcvf webapp.tar.gz .

      - name: Configure Dev Account AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Setup packer
        uses: hashicorp/setup-packer@main
        id: setup
        with:
          version: "latest"

      - name: Run `packer init`
        id: init
        run: packer init -var-file="./packer/variables.pkrvars.hcl" -var 'ami_users=[${{ secrets.DEMO_ACCOUNT_ID }}]' ./packer/

      - name: Run `packer validate`
        id: validate
        run: packer validate -var-file="./packer/variables.pkrvars.hcl" -var 'ami_users=[${{ secrets.DEMO_ACCOUNT_ID }}]' ./packer/
      
      - name: Build `packer build`
        id: build
        run: packer build -var-file="./packer/variables.pkrvars.hcl" -var 'ami_users=[${{ secrets.DEMO_ACCOUNT_ID }}]' ./packer/

      - name: Configure Demo Account AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.DEMO_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.DEMO_AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.DEMO_AWS_REGION }}  

      - name: Create New Launch Template version
        id: create launch template version
        run: |
          AMI_ID=$(cat build.json | jq -r '.builds[-1].artifact_id' | cut -d ':' -f 2)
          LATEST_VERSION=$(aws ec2 describe-launch-templates --launch-template-names ${{ secrets.LAUNCH_TEMPLATE_NAME }} --query "LaunchTemplates[].LatestVersionNumber" --output text)
          aws ec2 create-launch-template-version --launch-template-name ${{ secrets.LAUNCH_TEMPLATE_NAME }} --source-version-number $LATEST_VERSION --launch-template-data "{ \"ImageId\": \"$AMI_ID\" }"
      
      - name: Trigger Instance Refresh
        id: trigger instance refresh
        run: |
          aws autoscaling start-instance-refresh --auto-scaling-group-name ${{ secrets.AUTO_SCALING_GROUP_NAME }}